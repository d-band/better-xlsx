[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/cell.js",
    "content": "import { Style } from './style';\nimport { toExcelTime, NumFmt } from './lib';\nimport kind from 'kind-of';\n\nexport const CellType = {\n  TypeString: 49,\n  TypeFormula: 0,\n  TypeNumeric: 1,\n  TypeBool: 0,\n  TypeInline: 0,\n  TypeError: 0,\n  TypeDate: 14,\n  TypeGeneral: 0\n};\n\n/**\n * Cell intended to provide user access to the contents of Cell within an xlsx.Row.\n *\n * ```js\n * const cell = row.addCell();\n * cell.value = 'I am a cell!';\n * cell.hMerge = 2;\n * cell.vMerge = 1;\n * cell.style.fill.patternType = 'solid';\n * cell.style.fill.fgColor = '00FF0000';\n * cell.style.fill.bgColor = 'FF000000';\n * cell.style.align.h = 'center';\n * cell.style.align.v = 'center';\n * ```\n *\n * Set the cell value\n *\n * ```js\n * const cell = row.addCell();\n * // Date type\n * cell.setDate(new Date());\n * // Number type\n * cell.setNumber(123456);\n * cell.numFmt = '$#,##0.00';\n * ```\n */\nexport class Cell {\n  _value = '';\n  _style = null;\n  formula = '';\n  /**\n   * Number format @see {@link NumFmt}\n   * @type {String}\n   */\n  numFmt = '';\n  date1904 = false;\n  /**\n   * Hide the cell.\n   * @type {Boolean}\n   */\n  hidden = false;\n  /**\n   * Horizontal merge with other cells.\n   * @type {Number}\n   */\n  hMerge = 0;\n  /**\n   * Vertical merge with other cells.\n   * @type {Number}\n   */\n  vMerge = 0;\n  cellType = 'TypeString';\n\n  /**\n   * Create a cell and add it to a row.\n   * @private\n   * @param  {Object} options.row Row of add to\n   */\n  constructor ({ row }) {\n    this.row = row;\n  }\n  /**\n   * Get the cell style.\n   * @return {Style}\n   */\n  get style () {\n    if (this._style === null) {\n      this._style = new Style();\n    }\n    return this._style;\n  }\n  /**\n   * Set the style of the cell.\n   * @param  {Style} s\n   */\n  set style (s) {\n    this._style = s;\n  }\n  /**\n   * Get the cell value.\n   */\n  get value () {\n    return this._value;\n  }\n  /**\n   * Set the cell value.\n   * @param  {String|Date|Number|Boolean} v\n   */\n  set value (v) {\n    const t = kind(v);\n    if (t === 'null' || t === 'undefined') {\n      return this.setString('');\n    }\n    if (t === 'date') {\n      return this.setDateTime(v);\n    }\n    if (t === 'number') {\n      return this.setNumber(v);\n    }\n    if (t === 'string') {\n      return this.setString(v);\n    }\n    if (t === 'boolean') {\n      return this.setBool(v);\n    }\n    return this.setString(v.toString());\n  }\n  /**\n   * Set cell value with String type.\n   * @param {String} v\n   */\n  setString (v) {\n    this._value = v;\n    this.formula = '';\n    this.cellType = 'TypeString';\n  }\n  /**\n   * Set cell value with Date type.\n   * @param {Date} v\n   */\n  setDate (v) {\n    this._value = parseInt(toExcelTime(v));\n    this.formula = '';\n    this.numFmt = NumFmt[14];\n    this.cellType = 'TypeDate';\n  }\n  /**\n   * Set cell value with DateTime type.\n   * @param {Date} v\n   */\n  setDateTime (v) {\n    this._value = toExcelTime(v);\n    this.formula = '';\n    this.numFmt = NumFmt[22];\n    this.cellType = 'TypeDate';\n  }\n  /**\n   * Set cell value with Number type.\n   * @param {Number} v\n   */\n  setNumber (v) {\n    this._value = v;\n    this.formula = '';\n    this.numFmt = NumFmt[0];\n    this.cellType = 'TypeNumeric';\n  }\n  /**\n   * Set cell value with Boolean type.\n   * @param {Boolean} v\n   */\n  setBool (v) {\n    this._value = v ? 1 : 0;\n    this.cellType = 'TypeBool';\n  }\n  /**\n   * Set cell formula.\n   * @param {String} f - Formula like `B2*C2-D2`.\n   */\n  setFormula (f) {\n    this.formula = f;\n    this.cellType = 'TypeFormula';\n  }\n}\n",
    "static": true,
    "longname": "/Users/helloyou/Documents/js_pro/better-xlsx/src/cell.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "variable",
    "name": "CellType",
    "memberof": "src/cell.js",
    "static": true,
    "longname": "src/cell.js~CellType",
    "access": "public",
    "export": true,
    "importPath": "better-xlsx/src/cell.js",
    "importStyle": "{CellType}",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "{\"TypeString\": number, \"TypeFormula\": *, \"TypeNumeric\": number, \"TypeBool\": *, \"TypeInline\": *, \"TypeError\": *, \"TypeDate\": number, \"TypeGeneral\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 50,
    "kind": "class",
    "name": "Cell",
    "memberof": "src/cell.js",
    "static": true,
    "longname": "src/cell.js~Cell",
    "access": "public",
    "export": true,
    "importPath": "better-xlsx/src/cell.js",
    "importStyle": "{Cell}",
    "description": "Cell intended to provide user access to the contents of Cell within an xlsx.Row.\n\n```js\nconst cell = row.addCell();\ncell.value = 'I am a cell!';\ncell.hMerge = 2;\ncell.vMerge = 1;\ncell.style.fill.patternType = 'solid';\ncell.style.fill.fgColor = '00FF0000';\ncell.style.fill.bgColor = 'FF000000';\ncell.style.align.h = 'center';\ncell.style.align.v = 'center';\n```\n\nSet the cell value\n\n```js\nconst cell = row.addCell();\n// Date type\ncell.setDate(new Date());\n// Number type\ncell.setNumber(123456);\ncell.numFmt = '$#,##0.00';\n```",
    "lineNumber": 42,
    "interface": false
  },
  {
    "__docId__": 51,
    "kind": "member",
    "name": "_value",
    "memberof": "src/cell.js~Cell",
    "static": false,
    "longname": "src/cell.js~Cell#_value",
    "access": "private",
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 52,
    "kind": "member",
    "name": "_style",
    "memberof": "src/cell.js~Cell",
    "static": false,
    "longname": "src/cell.js~Cell#_style",
    "access": "private",
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 53,
    "kind": "member",
    "name": "formula",
    "memberof": "src/cell.js~Cell",
    "static": false,
    "longname": "src/cell.js~Cell#formula",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 54,
    "kind": "member",
    "name": "numFmt",
    "memberof": "src/cell.js~Cell",
    "static": false,
    "longname": "src/cell.js~Cell#numFmt",
    "access": "public",
    "description": "Number format @see {@link NumFmt}",
    "lineNumber": 50,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 55,
    "kind": "member",
    "name": "date1904",
    "memberof": "src/cell.js~Cell",
    "static": false,
    "longname": "src/cell.js~Cell#date1904",
    "access": "public",
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 56,
    "kind": "member",
    "name": "hidden",
    "memberof": "src/cell.js~Cell",
    "static": false,
    "longname": "src/cell.js~Cell#hidden",
    "access": "public",
    "description": "Hide the cell.",
    "lineNumber": 56,
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 57,
    "kind": "member",
    "name": "hMerge",
    "memberof": "src/cell.js~Cell",
    "static": false,
    "longname": "src/cell.js~Cell#hMerge",
    "access": "public",
    "description": "Horizontal merge with other cells.",
    "lineNumber": 61,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 58,
    "kind": "member",
    "name": "vMerge",
    "memberof": "src/cell.js~Cell",
    "static": false,
    "longname": "src/cell.js~Cell#vMerge",
    "access": "public",
    "description": "Vertical merge with other cells.",
    "lineNumber": 66,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 59,
    "kind": "member",
    "name": "cellType",
    "memberof": "src/cell.js~Cell",
    "static": false,
    "longname": "src/cell.js~Cell#cellType",
    "access": "public",
    "description": null,
    "lineNumber": 67,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 60,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/cell.js~Cell",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cell.js~Cell#constructor",
    "access": "private",
    "description": "Create a cell and add it to a row.",
    "lineNumber": 74,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options.row",
        "description": "Row of add to"
      }
    ]
  },
  {
    "__docId__": 61,
    "kind": "member",
    "name": "row",
    "memberof": "src/cell.js~Cell",
    "static": false,
    "longname": "src/cell.js~Cell#row",
    "access": "public",
    "description": null,
    "lineNumber": 75,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 62,
    "kind": "get",
    "name": "style",
    "memberof": "src/cell.js~Cell",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cell.js~Cell#style",
    "access": "public",
    "description": "Get the cell style.",
    "lineNumber": 81,
    "return": {
      "nullable": null,
      "types": [
        "Style"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 64,
    "kind": "set",
    "name": "style",
    "memberof": "src/cell.js~Cell",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cell.js~Cell#style",
    "access": "public",
    "description": "Set the style of the cell.",
    "lineNumber": 91,
    "params": [
      {
        "nullable": null,
        "types": [
          "Style"
        ],
        "spread": false,
        "optional": false,
        "name": "s",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 66,
    "kind": "get",
    "name": "value",
    "memberof": "src/cell.js~Cell",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cell.js~Cell#value",
    "access": "public",
    "description": "Get the cell value.",
    "lineNumber": 97,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 67,
    "kind": "set",
    "name": "value",
    "memberof": "src/cell.js~Cell",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cell.js~Cell#value",
    "access": "public",
    "description": "Set the cell value.",
    "lineNumber": 104,
    "params": [
      {
        "nullable": null,
        "types": [
          "String",
          "Date",
          "Number",
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "v",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 68,
    "kind": "method",
    "name": "setString",
    "memberof": "src/cell.js~Cell",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cell.js~Cell#setString",
    "access": "public",
    "description": "Set cell value with String type.",
    "lineNumber": 127,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "v",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 72,
    "kind": "method",
    "name": "setDate",
    "memberof": "src/cell.js~Cell",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cell.js~Cell#setDate",
    "access": "public",
    "description": "Set cell value with Date type.",
    "lineNumber": 136,
    "params": [
      {
        "nullable": null,
        "types": [
          "Date"
        ],
        "spread": false,
        "optional": false,
        "name": "v",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 77,
    "kind": "method",
    "name": "setDateTime",
    "memberof": "src/cell.js~Cell",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cell.js~Cell#setDateTime",
    "access": "public",
    "description": "Set cell value with DateTime type.",
    "lineNumber": 146,
    "params": [
      {
        "nullable": null,
        "types": [
          "Date"
        ],
        "spread": false,
        "optional": false,
        "name": "v",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 82,
    "kind": "method",
    "name": "setNumber",
    "memberof": "src/cell.js~Cell",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cell.js~Cell#setNumber",
    "access": "public",
    "description": "Set cell value with Number type.",
    "lineNumber": 156,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "v",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 87,
    "kind": "method",
    "name": "setBool",
    "memberof": "src/cell.js~Cell",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cell.js~Cell#setBool",
    "access": "public",
    "description": "Set cell value with Boolean type.",
    "lineNumber": 166,
    "params": [
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "v",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 90,
    "kind": "method",
    "name": "setFormula",
    "memberof": "src/cell.js~Cell",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cell.js~Cell#setFormula",
    "access": "public",
    "description": "Set cell formula.",
    "lineNumber": 174,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "f",
        "description": "Formula like `B2*C2-D2`."
      }
    ],
    "return": null
  },
  {
    "__docId__": 93,
    "kind": "file",
    "name": "src/col.js",
    "content": "import { NumFmt } from './lib';\nimport { Style } from './style';\n\n/**\n * The column of the Sheet.\n *\n * ```js\n * const col = sheet.col(0);\n * col.width = 20;\n * col.style.fill.patternType = 'solid';\n * col.style.fill.fgColor = '00FF0000';\n * col.style.fill.bgColor = 'FF000000';\n * col.style.align.h = 'center';\n * col.style.align.v = 'center';\n * ```\n */\nexport class Col {\n  outlineLevel = 0;\n  /**\n   * Number format for all column @see {@link NumFmt}\n   * @type {String}\n   */\n  numFmt = '';\n\n  constructor ({ min, max, hidden = false, collapsed = false, width = 0 }) {\n    this.min = min;\n    this.max = max;\n    this.hidden = hidden;\n    this.collapsed = collapsed;\n    /**\n     * Column width [default 9.5]\n     * @type {Number}\n     */\n    this.width = width;\n    /**\n     * Style of the column.\n     * @type {Style}\n     */\n    this.style = new Style();\n  }\n  setType (cellType) {\n    this.numFmt = NumFmt[cellType];\n  }\n}\n",
    "static": true,
    "longname": "/Users/helloyou/Documents/js_pro/better-xlsx/src/col.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 94,
    "kind": "class",
    "name": "Col",
    "memberof": "src/col.js",
    "static": true,
    "longname": "src/col.js~Col",
    "access": "public",
    "export": true,
    "importPath": "better-xlsx/src/col.js",
    "importStyle": "{Col}",
    "description": "The column of the Sheet.\n\n```js\nconst col = sheet.col(0);\ncol.width = 20;\ncol.style.fill.patternType = 'solid';\ncol.style.fill.fgColor = '00FF0000';\ncol.style.fill.bgColor = 'FF000000';\ncol.style.align.h = 'center';\ncol.style.align.v = 'center';\n```",
    "lineNumber": 17,
    "interface": false
  },
  {
    "__docId__": 95,
    "kind": "member",
    "name": "outlineLevel",
    "memberof": "src/col.js~Col",
    "static": false,
    "longname": "src/col.js~Col#outlineLevel",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 96,
    "kind": "member",
    "name": "numFmt",
    "memberof": "src/col.js~Col",
    "static": false,
    "longname": "src/col.js~Col#numFmt",
    "access": "public",
    "description": "Number format for all column @see {@link NumFmt}",
    "lineNumber": 23,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 97,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/col.js~Col",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/col.js~Col#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 98,
    "kind": "member",
    "name": "min",
    "memberof": "src/col.js~Col",
    "static": false,
    "longname": "src/col.js~Col#min",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 99,
    "kind": "member",
    "name": "max",
    "memberof": "src/col.js~Col",
    "static": false,
    "longname": "src/col.js~Col#max",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 100,
    "kind": "member",
    "name": "hidden",
    "memberof": "src/col.js~Col",
    "static": false,
    "longname": "src/col.js~Col#hidden",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 101,
    "kind": "member",
    "name": "collapsed",
    "memberof": "src/col.js~Col",
    "static": false,
    "longname": "src/col.js~Col#collapsed",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 102,
    "kind": "member",
    "name": "width",
    "memberof": "src/col.js~Col",
    "static": false,
    "longname": "src/col.js~Col#width",
    "access": "public",
    "description": "Column width [default 9.5]",
    "lineNumber": 34,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 103,
    "kind": "member",
    "name": "style",
    "memberof": "src/col.js~Col",
    "static": false,
    "longname": "src/col.js~Col#style",
    "access": "public",
    "description": "Style of the column.",
    "lineNumber": 39,
    "type": {
      "nullable": null,
      "types": [
        "Style"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 104,
    "kind": "method",
    "name": "setType",
    "memberof": "src/col.js~Col",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/col.js~Col#setType",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "params": [
      {
        "name": "cellType",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 106,
    "kind": "file",
    "name": "src/file.js",
    "content": "import { Sheet } from './sheet';\nimport * as templates from './templates';\nimport { RefTable } from './reftable';\nimport { makeXworkbook, Xsheets, Xsheet, makeWorkbookRels } from './xmlWorkbook';\nimport { makeXTypes, XOverride } from './xmlContentTypes';\nimport { XstyleSheet } from './xmlStyle';\nimport Zip from 'jszip';\n\n/**\n * This is the main class, use it:\n *\n * ```js\n * import { File } from 'better-xlsx';\n * const file = new File();\n * const sheet = file.addSheet('Sheet-1');\n * ```\n *\n * @class File\n */\nexport class File {\n  /**\n   * @private\n   */\n  sheet = {};\n  /**\n   * @private\n   */\n  sheets = [];\n  /**\n   * @private\n   */\n  definedNames = [];\n\n  constructor () {\n    /**\n     * @private\n     */\n    this.styles = new XstyleSheet({});\n  }\n  /**\n   * Add a new Sheet, with the provided name, to a File\n   * @param {String} name Name of the Sheet\n   * @return {Sheet}\n   */\n  addSheet (name) {\n    if (this.sheet[name]) {\n      throw new Error(`duplicate sheet name ${name}.`);\n    }\n    const sheet = new Sheet({\n      name,\n      file: this,\n      selected: this.sheets.length === 0\n    });\n    this.sheet[name] = sheet;\n    this.sheets.push(sheet);\n    return sheet;\n  }\n  /**\n   * Save the File to an xlsx file.\n   * @param  {String} [type='nodebuffer'] For Node.js use `nodebuffer` and browser use `blob` or `base64`.\n   * @param {Boolean} [compress=false] For file compression.\n   * @return {Promise|stream} For Node.js return `stream` and browser return Promise.\n   */\n  saveAs (type = 'nodebuffer', compress = false) {\n    const parts = this.makeParts();\n    const zip = new Zip();\n    for (const key of Object.keys(parts)) {\n      zip.file(key, parts[key]);\n    }\n    const compression = compress ? 'DEFLATE' : 'STORE';\n    if (type === 'blob' || type === 'base64') {\n      return zip.generateAsync({ type, compression });\n    } else {\n      return zip.generateNodeStream({ type: 'nodebuffer', compression });\n    }\n  }\n  /**\n   * @private\n   * @return {Object} XML files mapping object\n   */\n  makeParts () {\n    const parts = {};\n    const refTable = new RefTable();\n    const types = makeXTypes();\n    const workbook = makeXworkbook();\n\n    this.styles.reset();\n\n    let i = 1;\n    const sheets = new Xsheets();\n    for (const sheet of this.sheets) {\n      const xSheet = sheet.makeXSheet(refTable, this.styles);\n      types.children.push(new XOverride({\n        PartName: `/xl/worksheets/sheet${i}.xml`,\n        ContentType: 'application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml'\n      }));\n      sheets.children.push(new Xsheet({\n        name: sheet.name,\n        sheetId: i,\n        'r:id': `rId${i}`,\n        state: 'visible'\n      }));\n      parts[`xl/worksheets/sheet${i}.xml`] = xSheet.render();\n      i++;\n    }\n    workbook.sheets = sheets;\n\n    parts['xl/workbook.xml'] = workbook.render();\n    parts['_rels/.rels'] = templates.DOT_RELS;\n    parts['docProps/app.xml'] = templates.DOCPROPS_APP;\n    parts['docProps/core.xml'] = templates.DOCPROPS_CORE;\n    parts['xl/theme/theme1.xml'] = templates.XL_THEME_THEME;\n\n    parts['xl/sharedStrings.xml'] = refTable.makeXsst().render();\n    parts['xl/_rels/workbook.xml.rels'] = makeWorkbookRels(this.sheets.length).render();\n    parts['[Content_Types].xml'] = types.render();\n    parts['xl/styles.xml'] = this.styles.render();\n\n    return parts;\n  }\n}\n",
    "static": true,
    "longname": "/Users/helloyou/Documents/js_pro/better-xlsx/src/file.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 107,
    "kind": "class",
    "name": "File",
    "memberof": "src/file.js",
    "static": true,
    "longname": "src/file.js~File",
    "access": "public",
    "export": true,
    "importPath": "better-xlsx/src/file.js",
    "importStyle": "{File}",
    "description": "This is the main class, use it:\n\n```js\nimport { File } from 'better-xlsx';\nconst file = new File();\nconst sheet = file.addSheet('Sheet-1');\n```",
    "lineNumber": 20,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "File"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 108,
    "kind": "member",
    "name": "sheet",
    "memberof": "src/file.js~File",
    "static": false,
    "longname": "src/file.js~File#sheet",
    "access": "private",
    "description": "",
    "lineNumber": 24,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 109,
    "kind": "member",
    "name": "sheets",
    "memberof": "src/file.js~File",
    "static": false,
    "longname": "src/file.js~File#sheets",
    "access": "private",
    "description": "",
    "lineNumber": 28,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 110,
    "kind": "member",
    "name": "definedNames",
    "memberof": "src/file.js~File",
    "static": false,
    "longname": "src/file.js~File#definedNames",
    "access": "private",
    "description": "",
    "lineNumber": 32,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 111,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/file.js~File",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/file.js~File#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 112,
    "kind": "member",
    "name": "styles",
    "memberof": "src/file.js~File",
    "static": false,
    "longname": "src/file.js~File#styles",
    "access": "private",
    "description": "",
    "lineNumber": 38,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 113,
    "kind": "method",
    "name": "addSheet",
    "memberof": "src/file.js~File",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/file.js~File#addSheet",
    "access": "public",
    "description": "Add a new Sheet, with the provided name, to a File",
    "lineNumber": 45,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "Name of the Sheet"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Sheet"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 114,
    "kind": "method",
    "name": "saveAs",
    "memberof": "src/file.js~File",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/file.js~File#saveAs",
    "access": "public",
    "description": "Save the File to an xlsx file.",
    "lineNumber": 64,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'nodebuffer'",
        "defaultRaw": "'nodebuffer'",
        "name": "type",
        "description": "For Node.js use `nodebuffer` and browser use `blob` or `base64`."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "compress",
        "description": "For file compression."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise",
        "stream"
      ],
      "spread": false,
      "description": "For Node.js return `stream` and browser return Promise."
    }
  },
  {
    "__docId__": 115,
    "kind": "method",
    "name": "makeParts",
    "memberof": "src/file.js~File",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/file.js~File#makeParts",
    "access": "private",
    "description": "",
    "lineNumber": 81,
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "XML files mapping object"
    },
    "params": []
  },
  {
    "__docId__": 116,
    "kind": "file",
    "name": "src/index.js",
    "content": "import * as cell from './cell';\nimport * as col from './col';\nimport * as file from './file';\nimport * as lib from './lib';\nimport * as row from './row';\nimport * as sheet from './sheet';\nimport * as style from './style';\nimport Zip from 'jszip';\n\nexport default { ...cell, ...col, ...file, ...lib, ...row, ...sheet, ...style, Zip };\n",
    "static": true,
    "longname": "/Users/helloyou/Documents/js_pro/better-xlsx/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 117,
    "kind": "file",
    "name": "src/lib.js",
    "content": "export const NumFmtsCount = 163;\n/**\n * Number format table\n *\n * ```js\n * {\n *   0: 'general',\n *   1: '0',\n *   2: '0.00',\n *   3: '#,##0',\n *   4: '#,##0.00',\n *   9: '0%',\n *   10: '0.00%',\n *   11: '0.00e+00',\n *   12: '# ?/?',\n *   13: '# ??/??',\n *   14: 'mm-dd-yy',\n *   15: 'd-mmm-yy',\n *   16: 'd-mmm',\n *   17: 'mmm-yy',\n *   18: 'h:mm am/pm',\n *   19: 'h:mm:ss am/pm',\n *   20: 'h:mm',\n *   21: 'h:mm:ss',\n *   22: 'm/d/yy h:mm',\n *   37: '#,##0 ;(#,##0)',\n *   38: '#,##0 ;[red](#,##0)',\n *   39: '#,##0.00;(#,##0.00)',\n *   40: '#,##0.00;[red](#,##0.00)',\n *   41: '_(* #,##0_);_(* (#,##0);_(* \"-\"_);_(@_)',\n *   42: '_(\"$\"* #,##0_);_(\"$* (#,##0);_(\"$\"* \"-\"_);_(@_)',\n *   43: '_(* #,##0.00_);_(* (#,##0.00);_(* \"-\"??_);_(@_)',\n *   44: '_(\"$\"* #,##0.00_);_(\"$\"* (#,##0.00);_(\"$\"* \"-\"??_);_(@_)',\n *   45: 'mm:ss',\n *   46: '[h]:mm:ss',\n *   47: 'mmss.0',\n *   48: '##0.0e+0',\n *   49: '@'\n * }\n * ```\n *\n * @type {Object}\n */\nexport const NumFmt = {\n  0: 'general',\n  1: '0',\n  2: '0.00',\n  3: '#,##0',\n  4: '#,##0.00',\n  9: '0%',\n  10: '0.00%',\n  11: '0.00e+00',\n  12: '# ?/?',\n  13: '# ??/??',\n  14: 'mm-dd-yy',\n  15: 'd-mmm-yy',\n  16: 'd-mmm',\n  17: 'mmm-yy',\n  18: 'h:mm am/pm',\n  19: 'h:mm:ss am/pm',\n  20: 'h:mm',\n  21: 'h:mm:ss',\n  22: 'm/d/yy h:mm',\n  37: '#,##0 ;(#,##0)',\n  38: '#,##0 ;[red](#,##0)',\n  39: '#,##0.00;(#,##0.00)',\n  40: '#,##0.00;[red](#,##0.00)',\n  41: '_(* #,##0_);_(* (#,##0);_(* \"-\"_);_(@_)',\n  42: '_(\"$\"* #,##0_);_(\"$* (#,##0);_(\"$\"* \"-\"_);_(@_)',\n  43: '_(* #,##0.00_);_(* (#,##0.00);_(* \"-\"??_);_(@_)',\n  44: '_(\"$\"* #,##0.00_);_(\"$\"* (#,##0.00);_(\"$\"* \"-\"??_);_(@_)',\n  45: 'mm:ss',\n  46: '[h]:mm:ss',\n  47: 'mmss.0',\n  48: '##0.0e+0',\n  49: '@'\n};\n\nexport const NumFmtInv = {};\nfor (const k of Object.keys(NumFmt)) {\n  NumFmtInv[NumFmt[k]] = k;\n}\n// AA => 26\nexport function col2num (colstr) {\n  let d = 0;\n  for (let i = 0; i !== colstr.length; ++i) {\n    d = 26 * d + colstr.charCodeAt(i) - 64;\n  }\n  return d - 1;\n}\n// 26 => AA\nexport function num2col (col) {\n  let s = '';\n  for (++col; col; col = Math.floor((col - 1) / 26)) {\n    s = String.fromCharCode(((col - 1) % 26) + 65) + s;\n  }\n  return s;\n}\n// B3 => {x: 1, y: 2}\nexport function cid2coord (cid) {\n  const temp = cid.match(/([A-Z]+)(\\d+)/);\n  return {\n    x: col2num(temp[1]),\n    y: parseInt(temp[2], 10) - 1\n  };\n}\n\nexport function toExcelTime (d) {\n  const unix = d.getTime() / 1000;\n  return unix / 86400.0 + 25569.0;\n}\n",
    "static": true,
    "longname": "/Users/helloyou/Documents/js_pro/better-xlsx/src/lib.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 118,
    "kind": "variable",
    "name": "NumFmtsCount",
    "memberof": "src/lib.js",
    "static": true,
    "longname": "src/lib.js~NumFmtsCount",
    "access": "public",
    "export": true,
    "importPath": "better-xlsx/src/lib.js",
    "importStyle": "{NumFmtsCount}",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 119,
    "kind": "variable",
    "name": "NumFmt",
    "memberof": "src/lib.js",
    "static": true,
    "longname": "src/lib.js~NumFmt",
    "access": "public",
    "export": true,
    "importPath": "better-xlsx/src/lib.js",
    "importStyle": "{NumFmt}",
    "description": "Number format table\n\n```js\n{\n  0: 'general',\n  1: '0',\n  2: '0.00',\n  3: '#,##0',\n  4: '#,##0.00',\n  9: '0%',\n  10: '0.00%',\n  11: '0.00e+00',\n  12: '# ?/?',\n  13: '# ??/??',\n  14: 'mm-dd-yy',\n  15: 'd-mmm-yy',\n  16: 'd-mmm',\n  17: 'mmm-yy',\n  18: 'h:mm am/pm',\n  19: 'h:mm:ss am/pm',\n  20: 'h:mm',\n  21: 'h:mm:ss',\n  22: 'm/d/yy h:mm',\n  37: '#,##0 ;(#,##0)',\n  38: '#,##0 ;[red](#,##0)',\n  39: '#,##0.00;(#,##0.00)',\n  40: '#,##0.00;[red](#,##0.00)',\n  41: '_(* #,##0_);_(* (#,##0);_(* \"-\"_);_(@_)',\n  42: '_(\"$\"* #,##0_);_(\"$* (#,##0);_(\"$\"* \"-\"_);_(@_)',\n  43: '_(* #,##0.00_);_(* (#,##0.00);_(* \"-\"??_);_(@_)',\n  44: '_(\"$\"* #,##0.00_);_(\"$\"* (#,##0.00);_(\"$\"* \"-\"??_);_(@_)',\n  45: 'mm:ss',\n  46: '[h]:mm:ss',\n  47: 'mmss.0',\n  48: '##0.0e+0',\n  49: '@'\n}\n```",
    "lineNumber": 44,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 120,
    "kind": "variable",
    "name": "NumFmtInv",
    "memberof": "src/lib.js",
    "static": true,
    "longname": "src/lib.js~NumFmtInv",
    "access": "public",
    "export": true,
    "importPath": "better-xlsx/src/lib.js",
    "importStyle": "{NumFmtInv}",
    "description": null,
    "lineNumber": 79,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 121,
    "kind": "function",
    "name": "col2num",
    "memberof": "src/lib.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib.js~col2num",
    "access": "public",
    "export": true,
    "importPath": "better-xlsx/src/lib.js",
    "importStyle": "{col2num}",
    "description": null,
    "lineNumber": 84,
    "undocument": true,
    "params": [
      {
        "name": "colstr",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 122,
    "kind": "function",
    "name": "num2col",
    "memberof": "src/lib.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib.js~num2col",
    "access": "public",
    "export": true,
    "importPath": "better-xlsx/src/lib.js",
    "importStyle": "{num2col}",
    "description": null,
    "lineNumber": 92,
    "undocument": true,
    "params": [
      {
        "name": "col",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 123,
    "kind": "function",
    "name": "cid2coord",
    "memberof": "src/lib.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib.js~cid2coord",
    "access": "public",
    "export": true,
    "importPath": "better-xlsx/src/lib.js",
    "importStyle": "{cid2coord}",
    "description": null,
    "lineNumber": 100,
    "undocument": true,
    "params": [
      {
        "name": "cid",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"x\": *, \"y\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 124,
    "kind": "function",
    "name": "toExcelTime",
    "memberof": "src/lib.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib.js~toExcelTime",
    "access": "public",
    "export": true,
    "importPath": "better-xlsx/src/lib.js",
    "importStyle": "{toExcelTime}",
    "description": null,
    "lineNumber": 108,
    "undocument": true,
    "params": [
      {
        "name": "d",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 125,
    "kind": "file",
    "name": "src/node.js",
    "content": "function attrEscape (str) {\n  return str.replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/\\t/g, '&#x9;')\n    .replace(/\\n/g, '&#xA;')\n    .replace(/\\r/g, '&#xD;');\n}\nfunction escape (str) {\n  return str.replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\\r/g, '&#xD;');\n}\n\nexport const HEAD = Symbol('head');\n\nexport function props (...keys) {\n  return (target) => {\n    for (const key of keys) {\n      target.elements.push({\n        key,\n        kind: 'method',\n        placement: 'prototype',\n        descriptor: {\n          get () {\n            if (this.attributes) {\n              return this.attributes[key];\n            }\n          },\n          set (value) {\n            if (this.attributes === undefined) {\n              this.attributes = {};\n            }\n            this.attributes[key] = value;\n          },\n          configurable: true,\n          enumerable: true\n        }\n      });\n    }\n    return target;\n  };\n}\n\nexport class Node {\n  constructor (attributes = {}, children = [], name) {\n    for (const key of Object.keys(attributes)) {\n      this[key] = attributes[key];\n    }\n    this.children = children;\n    this.__name = name || this.constructor.name.substring(1);\n  }\n  render () {\n    function walk (tree) {\n      const name = tree.__name;\n      const { attributes, children } = tree;\n      const tokens = [];\n\n      if (tree[HEAD]) {\n        tokens.push(tree[HEAD]);\n      }\n      tokens.push(`<${name}`);\n\n      for (const key of Object.keys(attributes || {})) {\n        let v = attributes[key];\n        if (v === undefined) continue;\n        if (typeof v === 'string') {\n          v = attrEscape(v);\n        }\n        if (typeof v === 'boolean') {\n          v = v ? 1 : 0;\n        }\n        tokens.push(` ${key}=\"${v}\"`);\n      }\n\n      if (!children.length) {\n        tokens.push('/>');\n        return tokens;\n      }\n      tokens.push('>');\n      for (const child of children) {\n        if (child instanceof Node) {\n          tokens.push(child.render());\n        } else if (typeof child === 'string') {\n          tokens.push(escape(child));\n        } else {\n          tokens.push(child.toString());\n        }\n      }\n      tokens.push(`</${name}>`);\n      return tokens;\n    }\n    return walk(this).join('');\n  }\n}\n",
    "static": true,
    "longname": "/Users/helloyou/Documents/js_pro/better-xlsx/src/node.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 126,
    "kind": "function",
    "name": "attrEscape",
    "memberof": "src/node.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/node.js~attrEscape",
    "access": "public",
    "export": false,
    "importPath": "better-xlsx/src/node.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "str",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 127,
    "kind": "function",
    "name": "escape",
    "memberof": "src/node.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/node.js~escape",
    "access": "public",
    "export": false,
    "importPath": "better-xlsx/src/node.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [
      {
        "name": "str",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 128,
    "kind": "variable",
    "name": "HEAD",
    "memberof": "src/node.js",
    "static": true,
    "longname": "src/node.js~HEAD",
    "access": "public",
    "export": true,
    "importPath": "better-xlsx/src/node.js",
    "importStyle": "{HEAD}",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 129,
    "kind": "function",
    "name": "props",
    "memberof": "src/node.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/node.js~props",
    "access": "public",
    "export": true,
    "importPath": "better-xlsx/src/node.js",
    "importStyle": "{props}",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "params": [
      {
        "name": "keys",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 130,
    "kind": "class",
    "name": "Node",
    "memberof": "src/node.js",
    "static": true,
    "longname": "src/node.js~Node",
    "access": "public",
    "export": true,
    "importPath": "better-xlsx/src/node.js",
    "importStyle": "{Node}",
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 131,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/node.js~Node",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/node.js~Node#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 132,
    "kind": "member",
    "name": "[key]",
    "memberof": "src/node.js~Node",
    "static": false,
    "longname": "src/node.js~Node#[key]",
    "access": "public",
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 133,
    "kind": "member",
    "name": "children",
    "memberof": "src/node.js~Node",
    "static": false,
    "longname": "src/node.js~Node#children",
    "access": "public",
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 134,
    "kind": "member",
    "name": "__name",
    "memberof": "src/node.js~Node",
    "static": false,
    "longname": "src/node.js~Node#__name",
    "access": "private",
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 135,
    "kind": "method",
    "name": "render",
    "memberof": "src/node.js~Node",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/node.js~Node#render",
    "access": "public",
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 136,
    "kind": "file",
    "name": "src/reftable.js",
    "content": "import { Xsst, Xsi, Xt } from './xmlSharedStrings';\n\nexport class RefTable {\n  constructor () {\n    this.strings = [];\n    this.known = {};\n  }\n  makeXsst () {\n    const len = this.strings.length;\n    const sst = new Xsst({\n      count: len,\n      uniqueCount: len\n    });\n    for (const str of this.strings) {\n      const si = new Xsi({}, [new Xt({}, [str])]);\n      sst.children.push(si);\n    }\n    return sst;\n  }\n  addString (str) {\n    if (this.known[str] === undefined) {\n      const index = this.strings.length;\n      this.strings.push(str);\n      this.known[str] = index;\n      return index;\n    }\n    return this.known[str];\n  }\n  getString (index) {\n    return this.strings[index];\n  }\n  length () {\n    return this.strings.length;\n  }\n}\n",
    "static": true,
    "longname": "/Users/helloyou/Documents/js_pro/better-xlsx/src/reftable.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 137,
    "kind": "class",
    "name": "RefTable",
    "memberof": "src/reftable.js",
    "static": true,
    "longname": "src/reftable.js~RefTable",
    "access": "public",
    "export": true,
    "importPath": "better-xlsx/src/reftable.js",
    "importStyle": "{RefTable}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 138,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/reftable.js~RefTable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/reftable.js~RefTable#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 139,
    "kind": "member",
    "name": "strings",
    "memberof": "src/reftable.js~RefTable",
    "static": false,
    "longname": "src/reftable.js~RefTable#strings",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 140,
    "kind": "member",
    "name": "known",
    "memberof": "src/reftable.js~RefTable",
    "static": false,
    "longname": "src/reftable.js~RefTable#known",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 141,
    "kind": "method",
    "name": "makeXsst",
    "memberof": "src/reftable.js~RefTable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/reftable.js~RefTable#makeXsst",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 142,
    "kind": "method",
    "name": "addString",
    "memberof": "src/reftable.js~RefTable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/reftable.js~RefTable#addString",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "params": [
      {
        "name": "str",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 143,
    "kind": "method",
    "name": "getString",
    "memberof": "src/reftable.js~RefTable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/reftable.js~RefTable#getString",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "params": [
      {
        "name": "index",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 144,
    "kind": "method",
    "name": "length",
    "memberof": "src/reftable.js~RefTable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/reftable.js~RefTable#length",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 145,
    "kind": "file",
    "name": "src/row.js",
    "content": "import { Cell } from './cell';\n\n/**\n * Row of the sheet.\n * ```js\n * const row = sheet.addRow();\n * row.setHeightCM(0.8);\n * ```\n */\nexport class Row {\n  cells = [];\n  hidden = false;\n  /**\n   * Row height\n   * @type {Number}\n   */\n  height = 0;\n  outlineLevel = 0;\n  isCustom = false;\n\n  constructor ({ sheet }) {\n    this.sheet = sheet;\n  }\n  /**\n   * Set height of the Row with `cm` unit.\n   * @param {Number} ht Height with `cm` unit\n   */\n  setHeightCM (ht) {\n    this.height = ht * 28.3464567;\n    this.isCustom = true;\n  }\n  /**\n   * Create a cell and add it into the Row.\n   * @return {Cell}\n   */\n  addCell () {\n    const cell = new Cell({ row: this });\n    this.cells.push(cell);\n    this.sheet.maybeAddCol(this.cells.length);\n    return cell;\n  }\n}\n",
    "static": true,
    "longname": "/Users/helloyou/Documents/js_pro/better-xlsx/src/row.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 146,
    "kind": "class",
    "name": "Row",
    "memberof": "src/row.js",
    "static": true,
    "longname": "src/row.js~Row",
    "access": "public",
    "export": true,
    "importPath": "better-xlsx/src/row.js",
    "importStyle": "{Row}",
    "description": "Row of the sheet.\n```js\nconst row = sheet.addRow();\nrow.setHeightCM(0.8);\n```",
    "lineNumber": 10,
    "interface": false
  },
  {
    "__docId__": 147,
    "kind": "member",
    "name": "cells",
    "memberof": "src/row.js~Row",
    "static": false,
    "longname": "src/row.js~Row#cells",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 148,
    "kind": "member",
    "name": "hidden",
    "memberof": "src/row.js~Row",
    "static": false,
    "longname": "src/row.js~Row#hidden",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 149,
    "kind": "member",
    "name": "height",
    "memberof": "src/row.js~Row",
    "static": false,
    "longname": "src/row.js~Row#height",
    "access": "public",
    "description": "Row height",
    "lineNumber": 17,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 150,
    "kind": "member",
    "name": "outlineLevel",
    "memberof": "src/row.js~Row",
    "static": false,
    "longname": "src/row.js~Row#outlineLevel",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 151,
    "kind": "member",
    "name": "isCustom",
    "memberof": "src/row.js~Row",
    "static": false,
    "longname": "src/row.js~Row#isCustom",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 152,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/row.js~Row",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/row.js~Row#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 153,
    "kind": "member",
    "name": "sheet",
    "memberof": "src/row.js~Row",
    "static": false,
    "longname": "src/row.js~Row#sheet",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 154,
    "kind": "method",
    "name": "setHeightCM",
    "memberof": "src/row.js~Row",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/row.js~Row#setHeightCM",
    "access": "public",
    "description": "Set height of the Row with `cm` unit.",
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "ht",
        "description": "Height with `cm` unit"
      }
    ],
    "return": null
  },
  {
    "__docId__": 157,
    "kind": "method",
    "name": "addCell",
    "memberof": "src/row.js~Row",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/row.js~Row#addCell",
    "access": "public",
    "description": "Create a cell and add it into the Row.",
    "lineNumber": 36,
    "return": {
      "nullable": null,
      "types": [
        "Cell"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 158,
    "kind": "file",
    "name": "src/sheet.js",
    "content": "import { Row } from './row';\nimport { Col } from './col';\nimport { handleStyle, handleNumFmtId, Border } from './style';\nimport { num2col } from './lib';\nimport { makeXworksheet, XsheetData, Xpane, Xcols, Xcol, Xrow, Xdimension, Xc, Xf, XmergeCells, XmergeCell } from './xmlWorksheet';\n\n/**\n * Sheet of the xlsx file.\n * ```js\n * import { File } from 'better-xlsx';\n * const file = new File();\n * const sheet = file.addSheet('Sheet-1');\n * const row = sheet.addRow();\n * const cell = row.addCell();\n * ```\n */\nexport class Sheet {\n  rows = [];\n  cols = [];\n  maxRow = 0;\n  maxCol = 0;\n  hidden = false;\n  sheetViews = [];\n  sheetFormat = {\n    defaultColWidth: 0,\n    defaultRowHeight: 0,\n    outlineLevelCol: 0,\n    outlineLevelRow: 0\n  };\n  constructor ({ name, file, selected }) {\n    this.name = name;\n    this.file = file;\n    this.selected = selected;\n  }\n  /**\n   * Create a Row and add it into the Sheet.\n   * @return {Row}\n   */\n  addRow () {\n    const row = new Row({ sheet: this });\n    this.rows.push(row);\n    if (this.rows.length > this.maxRow) {\n      this.maxRow = this.rows.length;\n    }\n    return row;\n  }\n  maybeAddCol (cellCount) {\n    if (cellCount > this.maxCol) {\n      const col = new Col({\n        min: cellCount,\n        max: cellCount,\n        hidden: false,\n        collapsed: false\n      });\n      this.cols.push(col);\n      this.maxCol = cellCount;\n    }\n  }\n  /**\n   * Get Col of the sheet with index and create cols when `index > maxCol`.\n   * @param  {Number} idx Index of the Col [from 0].\n   * @return {Col}\n   */\n  col (idx) {\n    this.maybeAddCol(idx + 1);\n    return this.cols[idx];\n  }\n  /**\n   * Get Row of the sheet with index and create rows when `index > maxRow`.\n   * @param  {Number} idx Index of the Row [from 0].\n   * @return {Row}\n   */\n  row (idx) {\n    for (let len = this.rows.length; len <= idx; len++) {\n      this.addRow();\n    }\n    return this.rows[idx];\n  }\n  /**\n   * Get Cell of the sheet with `(row, col)` and create cell when out of range.\n   * @param  {Number} row\n   * @param {Number} col\n   * @return {Cell}\n   */\n  cell (row, col) {\n    for (let len = this.rows.length; len <= row; len++) {\n      this.addRow();\n    }\n    const r = this.rows[row];\n    for (let len = r.cells.length; len <= col; len++) {\n      r.addCell();\n    }\n    return r.cells[col];\n  }\n  /**\n   * Set columns width from `startcol` to `endcol`.\n   * @param {Number} startcol\n   * @param {Number} endcol\n   * @param {Number} width\n   */\n  setColWidth (startcol, endcol, width) {\n    if (startcol > endcol) {\n      throw new Error(`Could not set width for range ${startcol}-${endcol}: startcol must be less than endcol.`);\n    }\n    const col = new Col({\n      min: startcol + 1,\n      max: endcol + 1,\n      hidden: false,\n      collapsed: false,\n      width: width\n    });\n    this.cols.push(col);\n    if (endcol + 1 > this.maxCol) {\n      this.maxCol = endcol + 1;\n    }\n  }\n  handleMerged () {\n    const merged = [];\n    for (let r = 0; r < this.rows.length; r++) {\n      const row = this.rows[r];\n      for (let c = 0; c < row.cells.length; c++) {\n        const cell = row.cells[c];\n        if (cell.hMerge > 0 || cell.vMerge > 0) {\n          merged.push({ r, c, cell });\n        }\n      }\n    }\n    for (const { r, c, cell } of merged) {\n      const { border } = cell.style;\n\n      cell.style.border = new Border({});\n\n      for (let rownum = 0; rownum <= cell.vMerge; rownum++) {\n        for (let colnum = 0; colnum <= cell.hMerge; colnum++) {\n          const tmpcell = this.cell(r + rownum, c + colnum);\n          const arr = [];\n          if (rownum === 0) {\n            arr.push('top');\n          }\n          if (rownum === cell.vMerge) {\n            arr.push('bottom');\n          }\n          if (colnum === 0) {\n            arr.push('left');\n          }\n          if (colnum === cell.hMerge) {\n            arr.push('right');\n          }\n          if (arr.length) {\n            tmpcell.style.applyBorder = true;\n            arr.forEach(k => {\n              const ck = `${k}Color`;\n              tmpcell.style.border[k] = border[k];\n              tmpcell.style.border[ck] = border[ck];\n            });\n          }\n        }\n      }\n    }\n  }\n  makeXSheet (refTable, styles) {\n    const sheet = makeXworksheet();\n    const xSheet = new XsheetData();\n    let maxRow = 0;\n    let maxCell = 0;\n    let maxLevelCol;\n    let maxLevelRow;\n\n    this.handleMerged();\n\n    for (let i = 0; i < this.sheetViews.length; i++) {\n      const view = this.sheetViews[i];\n      if (view && view.pane) {\n        sheet.sheetViews.children[i].children.push(new Xpane({\n          xSplit: view.pane.xSplit,\n          ySplit: view.pane.ySplit,\n          topLeftCell: view.pane.topLeftCell,\n          activePane: view.pane.activePane,\n          state: view.pane.state\n        }));\n      }\n    }\n    if (this.selected) {\n      sheet.sheetViews.children[0].tabSelected = true;\n    }\n    if (this.sheetFormat.defaultRowHeight !== 0) {\n      sheet.sheetFormatPr.defaultRowHeight = this.sheetFormat.defaultRowHeight;\n    }\n    if (this.sheetFormat.defaultColWidth !== 0) {\n      sheet.sheetFormatPr.defaultColWidth = this.sheetFormat.defaultColWidth;\n    }\n\n    const fIdList = [];\n    sheet.cols = new Xcols();\n    for (let c = 0; c < this.cols.length; c++) {\n      const col = this.cols[c];\n      col.min = col.min || 1;\n      col.max = col.max || 1;\n      const xNumFmt = styles.newNumFmt(col.numFmt);\n      const fId = handleStyle(col.style, xNumFmt.numFmtId, styles);\n\n      fIdList.push(fId);\n\n      let customWidth = 0;\n      if (col.width === 0) {\n        col.width = 9.5;\n      } else {\n        customWidth = 1;\n      }\n      sheet.cols.children.push(new Xcol({\n        min: col.min,\n        max: col.max,\n        hidden: col.hidden,\n        width: col.width,\n        customWidth: customWidth,\n        collapsed: col.collapsed,\n        outlineLevel: col.outlineLevel,\n        style: fId\n      }));\n\n      if (col.outlineLevel > maxLevelCol) {\n        maxLevelCol = col.outlineLevel;\n      }\n    }\n    for (let r = 0; r < this.rows.length; r++) {\n      const row = this.rows[r];\n      if (r > maxRow) maxRow = r;\n      const xRow = new Xrow({ r: r + 1 });\n      if (row.isCustom) {\n        xRow.customHeight = true;\n        xRow.ht = row.height;\n      }\n      xRow.outlineLevel = row.outlineLevel;\n      if (row.outlineLevel > maxLevelRow) {\n        maxLevelRow = row.outlineLevel;\n      }\n      for (let c = 0; c < row.cells.length; c++) {\n        let fId = fIdList[c];\n        const cell = row.cells[c];\n        const xNumFmt = styles.newNumFmt(cell.numFmt);\n        const style = cell.style;\n        if (style !== null) {\n          fId = handleStyle(style, xNumFmt.numFmtId, styles);\n        } else if (cell.numFmt && this.cols[c].numFmt !== cell.numFmt) {\n          fId = handleNumFmtId(xNumFmt.NumFmtId, styles);\n        }\n\n        if (c > maxCell) maxCell = c;\n\n        const xC = new Xc({ r: `${num2col(c)}${r + 1}` });\n        switch (cell.cellType) {\n          case 'TypeString':\n            if (cell.value) {\n              xC.v = refTable.addString(cell.value);\n            }\n            xC.t = 's';\n            xC.s = fId;\n            break;\n          case 'TypeBool':\n            xC.v = cell.value;\n            xC.t = 'b';\n            xC.s = fId;\n            break;\n          case 'TypeNumeric':\n            xC.v = cell.value;\n            xC.s = fId;\n            break;\n          case 'TypeDate':\n            xC.v = cell.value;\n            xC.s = fId;\n            break;\n          case 'TypeFormula':\n            xC.v = cell.value;\n            xC.f = new Xf({}, [cell.formula]);\n            xC.s = fId;\n            break;\n          case 'TypeError':\n            xC.v = cell.value;\n            xC.f = new Xf({}, [cell.formula]);\n            xC.t = 'e';\n            xC.s = fId;\n            break;\n          case 'TypeGeneral':\n            xC.v = cell.value;\n            xC.s = fId;\n            break;\n        }\n        xRow.children.push(xC);\n        if (cell.hMerge > 0 || cell.vMerge > 0) {\n          // r == rownum, c == colnum\n          const start = `${num2col(c)}${r + 1}`;\n          const endcol = c + cell.hMerge;\n          const endrow = r + cell.vMerge + 1;\n          const end = `${num2col(endcol)}${endrow}`;\n          const mc = new XmergeCell({ ref: start + ':' + end });\n          if (sheet.mergeCells === null) {\n            sheet.mergeCells = new XmergeCells();\n          }\n          sheet.mergeCells.children.push(mc);\n        }\n      }\n      xSheet.children.push(xRow);\n    }\n    // Update sheet format with the freshly determined max levels\n    this.sheetFormat.outlineLevelCol = maxLevelCol;\n    this.sheetFormat.outlineLevelRow = maxLevelRow;\n    // .. and then also apply this to the xml worksheet\n    sheet.sheetFormatPr.outlineLevelCol = this.sheetFormat.outlineLevelCol;\n    sheet.sheetFormatPr.outlineLevelRow = this.sheetFormat.outlineLevelRow;\n\n    if (sheet.mergeCells !== null) {\n      sheet.mergeCells.count = sheet.mergeCells.children.length;\n    }\n\n    sheet.sheetData = xSheet;\n\n    const dimension = new Xdimension({\n      ref: `A1:${num2col(maxCell)}${maxRow + 1}`\n    });\n    if (dimension.ref === 'A1:A1') {\n      dimension.ref = 'A1';\n    }\n    sheet.dimension = dimension;\n    if (this.afterMake) {\n      this.afterMake(sheet);\n    }\n    return sheet;\n  }\n}\n",
    "static": true,
    "longname": "/Users/helloyou/Documents/js_pro/better-xlsx/src/sheet.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 159,
    "kind": "class",
    "name": "Sheet",
    "memberof": "src/sheet.js",
    "static": true,
    "longname": "src/sheet.js~Sheet",
    "access": "public",
    "export": true,
    "importPath": "better-xlsx/src/sheet.js",
    "importStyle": "{Sheet}",
    "description": "Sheet of the xlsx file.\n```js\nimport { File } from 'better-xlsx';\nconst file = new File();\nconst sheet = file.addSheet('Sheet-1');\nconst row = sheet.addRow();\nconst cell = row.addCell();\n```",
    "lineNumber": 17,
    "interface": false
  },
  {
    "__docId__": 160,
    "kind": "member",
    "name": "rows",
    "memberof": "src/sheet.js~Sheet",
    "static": false,
    "longname": "src/sheet.js~Sheet#rows",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 161,
    "kind": "member",
    "name": "cols",
    "memberof": "src/sheet.js~Sheet",
    "static": false,
    "longname": "src/sheet.js~Sheet#cols",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 162,
    "kind": "member",
    "name": "maxRow",
    "memberof": "src/sheet.js~Sheet",
    "static": false,
    "longname": "src/sheet.js~Sheet#maxRow",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 163,
    "kind": "member",
    "name": "maxCol",
    "memberof": "src/sheet.js~Sheet",
    "static": false,
    "longname": "src/sheet.js~Sheet#maxCol",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 164,
    "kind": "member",
    "name": "hidden",
    "memberof": "src/sheet.js~Sheet",
    "static": false,
    "longname": "src/sheet.js~Sheet#hidden",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 165,
    "kind": "member",
    "name": "sheetViews",
    "memberof": "src/sheet.js~Sheet",
    "static": false,
    "longname": "src/sheet.js~Sheet#sheetViews",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 166,
    "kind": "member",
    "name": "sheetFormat",
    "memberof": "src/sheet.js~Sheet",
    "static": false,
    "longname": "src/sheet.js~Sheet#sheetFormat",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 167,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/sheet.js~Sheet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/sheet.js~Sheet#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 168,
    "kind": "member",
    "name": "name",
    "memberof": "src/sheet.js~Sheet",
    "static": false,
    "longname": "src/sheet.js~Sheet#name",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 169,
    "kind": "member",
    "name": "file",
    "memberof": "src/sheet.js~Sheet",
    "static": false,
    "longname": "src/sheet.js~Sheet#file",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 170,
    "kind": "member",
    "name": "selected",
    "memberof": "src/sheet.js~Sheet",
    "static": false,
    "longname": "src/sheet.js~Sheet#selected",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 171,
    "kind": "method",
    "name": "addRow",
    "memberof": "src/sheet.js~Sheet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/sheet.js~Sheet#addRow",
    "access": "public",
    "description": "Create a Row and add it into the Sheet.",
    "lineNumber": 39,
    "return": {
      "nullable": null,
      "types": [
        "Row"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 173,
    "kind": "method",
    "name": "maybeAddCol",
    "memberof": "src/sheet.js~Sheet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/sheet.js~Sheet#maybeAddCol",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "params": [
      {
        "name": "cellCount",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 175,
    "kind": "method",
    "name": "col",
    "memberof": "src/sheet.js~Sheet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/sheet.js~Sheet#col",
    "access": "public",
    "description": "Get Col of the sheet with index and create cols when `index > maxCol`.",
    "lineNumber": 64,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "idx",
        "description": "Index of the Col [from 0]."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Col"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 176,
    "kind": "method",
    "name": "row",
    "memberof": "src/sheet.js~Sheet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/sheet.js~Sheet#row",
    "access": "public",
    "description": "Get Row of the sheet with index and create rows when `index > maxRow`.",
    "lineNumber": 73,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "idx",
        "description": "Index of the Row [from 0]."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Row"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 177,
    "kind": "method",
    "name": "cell",
    "memberof": "src/sheet.js~Sheet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/sheet.js~Sheet#cell",
    "access": "public",
    "description": "Get Cell of the sheet with `(row, col)` and create cell when out of range.",
    "lineNumber": 85,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "row",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "col",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Cell"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 178,
    "kind": "method",
    "name": "setColWidth",
    "memberof": "src/sheet.js~Sheet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/sheet.js~Sheet#setColWidth",
    "access": "public",
    "description": "Set columns width from `startcol` to `endcol`.",
    "lineNumber": 101,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "startcol",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "endcol",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "width",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 180,
    "kind": "method",
    "name": "handleMerged",
    "memberof": "src/sheet.js~Sheet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/sheet.js~Sheet#handleMerged",
    "access": "public",
    "description": null,
    "lineNumber": 117,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 181,
    "kind": "method",
    "name": "makeXSheet",
    "memberof": "src/sheet.js~Sheet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/sheet.js~Sheet#makeXSheet",
    "access": "public",
    "description": null,
    "lineNumber": 161,
    "undocument": true,
    "params": [
      {
        "name": "refTable",
        "types": [
          "*"
        ]
      },
      {
        "name": "styles",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 182,
    "kind": "file",
    "name": "src/style.js",
    "content": "import { Xfont, Xfill, XpatternFill, Xborder, Xxf, Xalignment } from './xmlStyle';\n\nexport function handleStyle (style, numFmtId, styles) {\n  const { xFont, xFill, xBorder, xXf } = style.makeXStyleElements();\n\n  const fontId = styles.addFont(xFont);\n  const fillId = styles.addFill(xFill);\n\n  // HACK - adding light grey fill, as in OO and Google\n  const greyfill = new Xfill({\n    patternFill: new XpatternFill({ patternType: 'lightGray' })\n  });\n  styles.addFill(greyfill);\n\n  const borderId = styles.addBorder(xBorder);\n  xXf.fontId = fontId;\n  xXf.fillId = fillId;\n  xXf.borderId = borderId;\n  xXf.numFmtId = numFmtId;\n  // apply the numFmtId when it is not the default cellxf\n  if (xXf.numFmtId > 0) {\n    xXf.applyNumberFormat = true;\n  }\n\n  xXf.alignment.horizontal = style.align.h;\n  xXf.alignment.indent = style.align.indent;\n  xXf.alignment.shrinkToFit = style.align.shrinkToFit;\n  xXf.alignment.textRotation = style.align.textRotation;\n  xXf.alignment.vertical = style.align.v;\n  xXf.alignment.wrapText = style.align.wrapText;\n\n  return styles.addCellXf(xXf);\n}\n\nexport function handleNumFmtId (numFmtId, styles) {\n  const xf = new Xxf({ numFmtId });\n  if (numFmtId > 0) {\n    xf.applyNumberFormat = true;\n  }\n  return styles.addCellXf(xf);\n}\n\n/**\n * Style class for set Cell styles.\n */\nexport class Style {\n  applyBorder = false;\n  applyFill = false;\n  applyFont = false;\n  applyAlignment = false;\n  namedStyleIndex = null;\n\n  constructor () {\n    /**\n     * Cell border\n     * @type {Border}\n     */\n    this.border = new Border({});\n    /**\n     * Cell fill background or foreground\n     * @type {Fill}\n     */\n    this.fill = new Fill({});\n    /**\n     * Cell font\n     * @type {Font}\n     */\n    this.font = new Font({});\n    /**\n     * Cell alignment\n     * @type {Alignment}\n     */\n    this.align = new Alignment({});\n  }\n  makeXStyleElements () {\n    const xFont = new Xfont({\n      sz: this.font.size,\n      name: this.font.name,\n      family: this.font.family,\n      charset: this.font.charset,\n      color: this.font.color,\n      b: this.font.bold,\n      i: this.font.italic,\n      u: this.font.underline\n    });\n    const xFill = new Xfill({\n      patternFill: new XpatternFill({\n        patternType: this.fill.patternType,\n        fgColor: this.fill.fgColor,\n        bgColor: this.fill.bgColor\n      })\n    });\n    const xBorder = new Xborder({\n      left: { style: this.border.left, color: this.border.leftColor },\n      right: { style: this.border.right, color: this.border.rightColor },\n      top: { style: this.border.top, color: this.border.topColor },\n      bottom: { style: this.border.bottom, color: this.border.bottomColor }\n    });\n    const xXf = new Xxf({\n      numFmtId: 0,\n      applyBorder: this.applyBorder,\n      applyFill: this.applyFill,\n      applyFont: this.applyFont,\n      applyAlignment: this.applyAlignment\n    });\n\n    xXf.alignment = new Xalignment({\n      horizontal: this.align.h,\n      indent: this.align.indent,\n      shrinkToFit: this.align.shrinkToFit,\n      textRotation: this.align.textRotation,\n      vertical: this.align.v,\n      wrapText: this.align.wrapText\n    });\n\n    if (this.namedStyleIndex !== null) {\n      xXf.xfId = this.namedStyleIndex;\n    }\n\n    return { xFont, xFill, xBorder, xXf };\n  }\n}\n\n/**\n * Border of the Style and border type have: `none`, `thin`, `medium`, `thick`, `dashed`, `dotted`, `double`\n *\n */\nexport class Border {\n  /**\n   * left border color\n   * @type {String}\n   */\n  leftColor = undefined;\n  /**\n   * right border color\n   * @type {String}\n   */\n  rightColor = undefined;\n  /**\n   * top border color\n   * @type {String}\n   */\n  topColor = undefined;\n  /**\n   * bottom border color\n   * @type {String}\n   */\n  bottomColor = undefined;\n\n  constructor ({ left = 'none', right = 'none', top = 'none', bottom = 'none' }) {\n    /**\n     * left border type\n     * @type {String}\n     */\n    this.left = left;\n    /**\n     * right border type\n     * @type {String}\n     */\n    this.right = right;\n    /**\n     * top border type\n     * @type {String}\n     */\n    this.top = top;\n    /**\n     * bottom border type\n     * @type {String}\n     */\n    this.bottom = bottom;\n  }\n}\n/**\n * Fill of the Style\n */\nexport class Fill {\n  constructor ({ patternType = 'none', fgColor = 'FFFFFFFF', bgColor = '00000000' }) {\n    /**\n     * pattern type of the fill\n     * @type {String}\n     */\n    this.patternType = patternType;\n    /**\n     * foreground color of the fill\n     * @type {String}\n     */\n    this.fgColor = fgColor;\n    /**\n     * background color of the fill\n     * @type {String}\n     */\n    this.bgColor = bgColor;\n  }\n}\n/**\n * Font of the Style\n */\nexport class Font {\n  family = 0;\n  charset = 0;\n  /**\n   * font color\n   * @type {String}\n   */\n  color = undefined;\n  /**\n   * Is bold style\n   * @type {Boolean}\n   */\n  bold = false;\n  /**\n   * Is italic style\n   * @type {Boolean}\n   */\n  italic = false;\n  /**\n   * IS underline style\n   * @type {Boolean}\n   */\n  underline = false;\n\n  constructor ({ size = 12, name = 'Verdana' }) {\n    /**\n     * font size [default 12]\n     * @type {Number}\n     */\n    this.size = size;\n    this.name = name;\n  }\n}\n/**\n * Alignment of the Style.\n */\nexport class Alignment {\n  indent = 0;\n  shrinkToFit = false;\n  textRotation = 0;\n  wrapText = false;\n\n  constructor ({ h = 'general', v = 'bottom' }) {\n    /**\n     * Horizontal align: `general`, `center`, `left`, `right`\n     * @type {String}\n     */\n    this.h = h;\n    /**\n     * Vertical align: `general`, `top`, `bottom`, `center`\n     * @type {String}\n     */\n    this.v = v;\n  }\n}\n",
    "static": true,
    "longname": "/Users/helloyou/Documents/js_pro/better-xlsx/src/style.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 183,
    "kind": "function",
    "name": "handleStyle",
    "memberof": "src/style.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/style.js~handleStyle",
    "access": "public",
    "export": true,
    "importPath": "better-xlsx/src/style.js",
    "importStyle": "{handleStyle}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "style",
        "types": [
          "*"
        ]
      },
      {
        "name": "numFmtId",
        "types": [
          "*"
        ]
      },
      {
        "name": "styles",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 184,
    "kind": "function",
    "name": "handleNumFmtId",
    "memberof": "src/style.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/style.js~handleNumFmtId",
    "access": "public",
    "export": true,
    "importPath": "better-xlsx/src/style.js",
    "importStyle": "{handleNumFmtId}",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "params": [
      {
        "name": "numFmtId",
        "types": [
          "*"
        ]
      },
      {
        "name": "styles",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 185,
    "kind": "class",
    "name": "Style",
    "memberof": "src/style.js",
    "static": true,
    "longname": "src/style.js~Style",
    "access": "public",
    "export": true,
    "importPath": "better-xlsx/src/style.js",
    "importStyle": "{Style}",
    "description": "Style class for set Cell styles.",
    "lineNumber": 46,
    "interface": false
  },
  {
    "__docId__": 186,
    "kind": "member",
    "name": "applyBorder",
    "memberof": "src/style.js~Style",
    "static": false,
    "longname": "src/style.js~Style#applyBorder",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 187,
    "kind": "member",
    "name": "applyFill",
    "memberof": "src/style.js~Style",
    "static": false,
    "longname": "src/style.js~Style#applyFill",
    "access": "public",
    "description": null,
    "lineNumber": 48,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 188,
    "kind": "member",
    "name": "applyFont",
    "memberof": "src/style.js~Style",
    "static": false,
    "longname": "src/style.js~Style#applyFont",
    "access": "public",
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 189,
    "kind": "member",
    "name": "applyAlignment",
    "memberof": "src/style.js~Style",
    "static": false,
    "longname": "src/style.js~Style#applyAlignment",
    "access": "public",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 190,
    "kind": "member",
    "name": "namedStyleIndex",
    "memberof": "src/style.js~Style",
    "static": false,
    "longname": "src/style.js~Style#namedStyleIndex",
    "access": "public",
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 191,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/style.js~Style",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/style.js~Style#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 192,
    "kind": "member",
    "name": "border",
    "memberof": "src/style.js~Style",
    "static": false,
    "longname": "src/style.js~Style#border",
    "access": "public",
    "description": "Cell border",
    "lineNumber": 58,
    "type": {
      "nullable": null,
      "types": [
        "Border"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 193,
    "kind": "member",
    "name": "fill",
    "memberof": "src/style.js~Style",
    "static": false,
    "longname": "src/style.js~Style#fill",
    "access": "public",
    "description": "Cell fill background or foreground",
    "lineNumber": 63,
    "type": {
      "nullable": null,
      "types": [
        "Fill"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 194,
    "kind": "member",
    "name": "font",
    "memberof": "src/style.js~Style",
    "static": false,
    "longname": "src/style.js~Style#font",
    "access": "public",
    "description": "Cell font",
    "lineNumber": 68,
    "type": {
      "nullable": null,
      "types": [
        "Font"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 195,
    "kind": "member",
    "name": "align",
    "memberof": "src/style.js~Style",
    "static": false,
    "longname": "src/style.js~Style#align",
    "access": "public",
    "description": "Cell alignment",
    "lineNumber": 73,
    "type": {
      "nullable": null,
      "types": [
        "Alignment"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 196,
    "kind": "method",
    "name": "makeXStyleElements",
    "memberof": "src/style.js~Style",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/style.js~Style#makeXStyleElements",
    "access": "public",
    "description": null,
    "lineNumber": 75,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "{\"xFont\": *, \"xFill\": *, \"xBorder\": *, \"xXf\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 197,
    "kind": "class",
    "name": "Border",
    "memberof": "src/style.js",
    "static": true,
    "longname": "src/style.js~Border",
    "access": "public",
    "export": true,
    "importPath": "better-xlsx/src/style.js",
    "importStyle": "{Border}",
    "description": "Border of the Style and border type have: `none`, `thin`, `medium`, `thick`, `dashed`, `dotted`, `double`",
    "lineNumber": 128,
    "interface": false
  },
  {
    "__docId__": 198,
    "kind": "member",
    "name": "leftColor",
    "memberof": "src/style.js~Border",
    "static": false,
    "longname": "src/style.js~Border#leftColor",
    "access": "public",
    "description": "left border color",
    "lineNumber": 133,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 199,
    "kind": "member",
    "name": "rightColor",
    "memberof": "src/style.js~Border",
    "static": false,
    "longname": "src/style.js~Border#rightColor",
    "access": "public",
    "description": "right border color",
    "lineNumber": 138,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 200,
    "kind": "member",
    "name": "topColor",
    "memberof": "src/style.js~Border",
    "static": false,
    "longname": "src/style.js~Border#topColor",
    "access": "public",
    "description": "top border color",
    "lineNumber": 143,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 201,
    "kind": "member",
    "name": "bottomColor",
    "memberof": "src/style.js~Border",
    "static": false,
    "longname": "src/style.js~Border#bottomColor",
    "access": "public",
    "description": "bottom border color",
    "lineNumber": 148,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 202,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/style.js~Border",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/style.js~Border#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 150,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 203,
    "kind": "member",
    "name": "left",
    "memberof": "src/style.js~Border",
    "static": false,
    "longname": "src/style.js~Border#left",
    "access": "public",
    "description": "left border type",
    "lineNumber": 155,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 204,
    "kind": "member",
    "name": "right",
    "memberof": "src/style.js~Border",
    "static": false,
    "longname": "src/style.js~Border#right",
    "access": "public",
    "description": "right border type",
    "lineNumber": 160,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 205,
    "kind": "member",
    "name": "top",
    "memberof": "src/style.js~Border",
    "static": false,
    "longname": "src/style.js~Border#top",
    "access": "public",
    "description": "top border type",
    "lineNumber": 165,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 206,
    "kind": "member",
    "name": "bottom",
    "memberof": "src/style.js~Border",
    "static": false,
    "longname": "src/style.js~Border#bottom",
    "access": "public",
    "description": "bottom border type",
    "lineNumber": 170,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 207,
    "kind": "class",
    "name": "Fill",
    "memberof": "src/style.js",
    "static": true,
    "longname": "src/style.js~Fill",
    "access": "public",
    "export": true,
    "importPath": "better-xlsx/src/style.js",
    "importStyle": "{Fill}",
    "description": "Fill of the Style",
    "lineNumber": 176,
    "interface": false
  },
  {
    "__docId__": 208,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/style.js~Fill",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/style.js~Fill#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 177,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 209,
    "kind": "member",
    "name": "patternType",
    "memberof": "src/style.js~Fill",
    "static": false,
    "longname": "src/style.js~Fill#patternType",
    "access": "public",
    "description": "pattern type of the fill",
    "lineNumber": 182,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 210,
    "kind": "member",
    "name": "fgColor",
    "memberof": "src/style.js~Fill",
    "static": false,
    "longname": "src/style.js~Fill#fgColor",
    "access": "public",
    "description": "foreground color of the fill",
    "lineNumber": 187,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 211,
    "kind": "member",
    "name": "bgColor",
    "memberof": "src/style.js~Fill",
    "static": false,
    "longname": "src/style.js~Fill#bgColor",
    "access": "public",
    "description": "background color of the fill",
    "lineNumber": 192,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 212,
    "kind": "class",
    "name": "Font",
    "memberof": "src/style.js",
    "static": true,
    "longname": "src/style.js~Font",
    "access": "public",
    "export": true,
    "importPath": "better-xlsx/src/style.js",
    "importStyle": "{Font}",
    "description": "Font of the Style",
    "lineNumber": 198,
    "interface": false
  },
  {
    "__docId__": 213,
    "kind": "member",
    "name": "family",
    "memberof": "src/style.js~Font",
    "static": false,
    "longname": "src/style.js~Font#family",
    "access": "public",
    "description": null,
    "lineNumber": 199,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 214,
    "kind": "member",
    "name": "charset",
    "memberof": "src/style.js~Font",
    "static": false,
    "longname": "src/style.js~Font#charset",
    "access": "public",
    "description": null,
    "lineNumber": 200,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 215,
    "kind": "member",
    "name": "color",
    "memberof": "src/style.js~Font",
    "static": false,
    "longname": "src/style.js~Font#color",
    "access": "public",
    "description": "font color",
    "lineNumber": 205,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 216,
    "kind": "member",
    "name": "bold",
    "memberof": "src/style.js~Font",
    "static": false,
    "longname": "src/style.js~Font#bold",
    "access": "public",
    "description": "Is bold style",
    "lineNumber": 210,
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 217,
    "kind": "member",
    "name": "italic",
    "memberof": "src/style.js~Font",
    "static": false,
    "longname": "src/style.js~Font#italic",
    "access": "public",
    "description": "Is italic style",
    "lineNumber": 215,
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 218,
    "kind": "member",
    "name": "underline",
    "memberof": "src/style.js~Font",
    "static": false,
    "longname": "src/style.js~Font#underline",
    "access": "public",
    "description": "IS underline style",
    "lineNumber": 220,
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 219,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/style.js~Font",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/style.js~Font#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 222,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 220,
    "kind": "member",
    "name": "size",
    "memberof": "src/style.js~Font",
    "static": false,
    "longname": "src/style.js~Font#size",
    "access": "public",
    "description": "font size [default 12]",
    "lineNumber": 227,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 221,
    "kind": "member",
    "name": "name",
    "memberof": "src/style.js~Font",
    "static": false,
    "longname": "src/style.js~Font#name",
    "access": "public",
    "description": null,
    "lineNumber": 228,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 222,
    "kind": "class",
    "name": "Alignment",
    "memberof": "src/style.js",
    "static": true,
    "longname": "src/style.js~Alignment",
    "access": "public",
    "export": true,
    "importPath": "better-xlsx/src/style.js",
    "importStyle": "{Alignment}",
    "description": "Alignment of the Style.",
    "lineNumber": 234,
    "interface": false
  },
  {
    "__docId__": 223,
    "kind": "member",
    "name": "indent",
    "memberof": "src/style.js~Alignment",
    "static": false,
    "longname": "src/style.js~Alignment#indent",
    "access": "public",
    "description": null,
    "lineNumber": 235,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 224,
    "kind": "member",
    "name": "shrinkToFit",
    "memberof": "src/style.js~Alignment",
    "static": false,
    "longname": "src/style.js~Alignment#shrinkToFit",
    "access": "public",
    "description": null,
    "lineNumber": 236,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 225,
    "kind": "member",
    "name": "textRotation",
    "memberof": "src/style.js~Alignment",
    "static": false,
    "longname": "src/style.js~Alignment#textRotation",
    "access": "public",
    "description": null,
    "lineNumber": 237,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 226,
    "kind": "member",
    "name": "wrapText",
    "memberof": "src/style.js~Alignment",
    "static": false,
    "longname": "src/style.js~Alignment#wrapText",
    "access": "public",
    "description": null,
    "lineNumber": 238,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 227,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/style.js~Alignment",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/style.js~Alignment#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 240,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 228,
    "kind": "member",
    "name": "h",
    "memberof": "src/style.js~Alignment",
    "static": false,
    "longname": "src/style.js~Alignment#h",
    "access": "public",
    "description": "Horizontal align: `general`, `center`, `left`, `right`",
    "lineNumber": 245,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 229,
    "kind": "member",
    "name": "v",
    "memberof": "src/style.js~Alignment",
    "static": false,
    "longname": "src/style.js~Alignment#v",
    "access": "public",
    "description": "Vertical align: `general`, `top`, `bottom`, `center`",
    "lineNumber": 250,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 230,
    "kind": "file",
    "name": "src/templates.js",
    "content": "export const DOT_RELS = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\">\n  <Relationship Id=\"rId1\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument\" Target=\"xl/workbook.xml\"/>\n  <Relationship Id=\"rId2\" Type=\"http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties\" Target=\"docProps/core.xml\"/>\n  <Relationship Id=\"rId3\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/extended-properties\" Target=\"docProps/app.xml\"/>\n</Relationships>`;\n\nexport const DOCPROPS_APP = `<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Properties xmlns=\"http://schemas.openxmlformats.org/officeDocument/2006/extended-properties\" xmlns:vt=\"http://schemas.openxmlformats.org/officeDocument/2006/docPropsVTypes\">\n  <TotalTime>0</TotalTime>\n  <Application>JS XLSX</Application>\n</Properties>`;\n\nexport const DOCPROPS_CORE = `<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<cp:coreProperties xmlns:cp=\"http://schemas.openxmlformats.org/package/2006/metadata/core-properties\" xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:dcmitype=\"http://purl.org/dc/dcmitype/\" xmlns:dcterms=\"http://purl.org/dc/terms/\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"></cp:coreProperties>`;\n\nexport const XL_THEME_THEME = `<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<a:theme xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\" name=\"Office-Design\">\n  <a:themeElements>\n    <a:clrScheme name=\"Office\">\n      <a:dk1>\n        <a:sysClr val=\"windowText\" lastClr=\"000000\"/>\n      </a:dk1>\n      <a:lt1>\n        <a:sysClr val=\"window\" lastClr=\"FFFFFF\"/>\n      </a:lt1>\n      <a:dk2>\n        <a:srgbClr val=\"1F497D\"/>\n      </a:dk2>\n      <a:lt2>\n        <a:srgbClr val=\"EEECE1\"/>\n      </a:lt2>\n      <a:accent1>\n        <a:srgbClr val=\"4F81BD\"/>\n      </a:accent1>\n      <a:accent2>\n        <a:srgbClr val=\"C0504D\"/>\n      </a:accent2>\n      <a:accent3>\n        <a:srgbClr val=\"9BBB59\"/>\n      </a:accent3>\n      <a:accent4>\n        <a:srgbClr val=\"8064A2\"/>\n      </a:accent4>\n      <a:accent5>\n        <a:srgbClr val=\"4BACC6\"/>\n      </a:accent5>\n      <a:accent6>\n        <a:srgbClr val=\"F79646\"/>\n      </a:accent6>\n      <a:hlink>\n        <a:srgbClr val=\"0000FF\"/>\n      </a:hlink>\n      <a:folHlink>\n        <a:srgbClr val=\"800080\"/>\n      </a:folHlink>\n    </a:clrScheme>\n    <a:fontScheme name=\"Office\">\n      <a:majorFont>\n        <a:latin typeface=\"Cambria\"/>\n        <a:ea typeface=\"\"/>\n        <a:cs typeface=\"\"/>\n        <a:font script=\"Jpan\" typeface=\"ＭＳ Ｐゴシック\"/>\n        <a:font script=\"Hang\" typeface=\"맑은 고딕\"/>\n        <a:font script=\"Hans\" typeface=\"宋体\"/>\n        <a:font script=\"Hant\" typeface=\"新細明體\"/>\n        <a:font script=\"Arab\" typeface=\"Times New Roman\"/>\n        <a:font script=\"Hebr\" typeface=\"Times New Roman\"/>\n        <a:font script=\"Thai\" typeface=\"Tahoma\"/>\n        <a:font script=\"Ethi\" typeface=\"Nyala\"/>\n        <a:font script=\"Beng\" typeface=\"Vrinda\"/>\n        <a:font script=\"Gujr\" typeface=\"Shruti\"/>\n        <a:font script=\"Khmr\" typeface=\"MoolBoran\"/>\n        <a:font script=\"Knda\" typeface=\"Tunga\"/>\n        <a:font script=\"Guru\" typeface=\"Raavi\"/>\n        <a:font script=\"Cans\" typeface=\"Euphemia\"/>\n        <a:font script=\"Cher\" typeface=\"Plantagenet Cherokee\"/>\n        <a:font script=\"Yiii\" typeface=\"Microsoft Yi Baiti\"/>\n        <a:font script=\"Tibt\" typeface=\"Microsoft Himalaya\"/>\n        <a:font script=\"Thaa\" typeface=\"MV Boli\"/>\n        <a:font script=\"Deva\" typeface=\"Mangal\"/>\n        <a:font script=\"Telu\" typeface=\"Gautami\"/>\n        <a:font script=\"Taml\" typeface=\"Latha\"/>\n        <a:font script=\"Syrc\" typeface=\"Estrangelo Edessa\"/>\n        <a:font script=\"Orya\" typeface=\"Kalinga\"/>\n        <a:font script=\"Mlym\" typeface=\"Kartika\"/>\n        <a:font script=\"Laoo\" typeface=\"DokChampa\"/>\n        <a:font script=\"Sinh\" typeface=\"Iskoola Pota\"/>\n        <a:font script=\"Mong\" typeface=\"Mongolian Baiti\"/>\n        <a:font script=\"Viet\" typeface=\"Times New Roman\"/>\n        <a:font script=\"Uigh\" typeface=\"Microsoft Uighur\"/>\n        <a:font script=\"Geor\" typeface=\"Sylfaen\"/>\n      </a:majorFont>\n      <a:minorFont>\n        <a:latin typeface=\"Calibri\"/>\n        <a:ea typeface=\"\"/>\n        <a:cs typeface=\"\"/>\n        <a:font script=\"Jpan\" typeface=\"ＭＳ Ｐゴシック\"/>\n        <a:font script=\"Hang\" typeface=\"맑은 고딕\"/>\n        <a:font script=\"Hans\" typeface=\"宋体\"/>\n        <a:font script=\"Hant\" typeface=\"新細明體\"/>\n        <a:font script=\"Arab\" typeface=\"Arial\"/>\n        <a:font script=\"Hebr\" typeface=\"Arial\"/>\n        <a:font script=\"Thai\" typeface=\"Tahoma\"/>\n        <a:font script=\"Ethi\" typeface=\"Nyala\"/>\n        <a:font script=\"Beng\" typeface=\"Vrinda\"/>\n        <a:font script=\"Gujr\" typeface=\"Shruti\"/>\n        <a:font script=\"Khmr\" typeface=\"DaunPenh\"/>\n        <a:font script=\"Knda\" typeface=\"Tunga\"/>\n        <a:font script=\"Guru\" typeface=\"Raavi\"/>\n        <a:font script=\"Cans\" typeface=\"Euphemia\"/>\n        <a:font script=\"Cher\" typeface=\"Plantagenet Cherokee\"/>\n        <a:font script=\"Yiii\" typeface=\"Microsoft Yi Baiti\"/>\n        <a:font script=\"Tibt\" typeface=\"Microsoft Himalaya\"/>\n        <a:font script=\"Thaa\" typeface=\"MV Boli\"/>\n        <a:font script=\"Deva\" typeface=\"Mangal\"/>\n        <a:font script=\"Telu\" typeface=\"Gautami\"/>\n        <a:font script=\"Taml\" typeface=\"Latha\"/>\n        <a:font script=\"Syrc\" typeface=\"Estrangelo Edessa\"/>\n        <a:font script=\"Orya\" typeface=\"Kalinga\"/>\n        <a:font script=\"Mlym\" typeface=\"Kartika\"/>\n        <a:font script=\"Laoo\" typeface=\"DokChampa\"/>\n        <a:font script=\"Sinh\" typeface=\"Iskoola Pota\"/>\n        <a:font script=\"Mong\" typeface=\"Mongolian Baiti\"/>\n        <a:font script=\"Viet\" typeface=\"Arial\"/>\n        <a:font script=\"Uigh\" typeface=\"Microsoft Uighur\"/>\n        <a:font script=\"Geor\" typeface=\"Sylfaen\"/>\n      </a:minorFont>\n    </a:fontScheme>\n    <a:fmtScheme name=\"Office\">\n      <a:fillStyleLst>\n        <a:solidFill>\n          <a:schemeClr val=\"phClr\"/>\n        </a:solidFill>\n        <a:gradFill rotWithShape=\"1\">\n          <a:gsLst>\n            <a:gs pos=\"0\">\n              <a:schemeClr val=\"phClr\">\n                <a:tint val=\"50000\"/>\n                <a:satMod val=\"300000\"/>\n              </a:schemeClr>\n            </a:gs>\n            <a:gs pos=\"35000\">\n              <a:schemeClr val=\"phClr\">\n                <a:tint val=\"37000\"/>\n                <a:satMod val=\"300000\"/>\n              </a:schemeClr>\n            </a:gs>\n            <a:gs pos=\"100000\">\n              <a:schemeClr val=\"phClr\">\n                <a:tint val=\"15000\"/>\n                <a:satMod val=\"350000\"/>\n              </a:schemeClr>\n            </a:gs>\n          </a:gsLst>\n          <a:lin ang=\"16200000\" scaled=\"1\"/>\n        </a:gradFill>\n        <a:gradFill rotWithShape=\"1\">\n          <a:gsLst>\n            <a:gs pos=\"0\">\n              <a:schemeClr val=\"phClr\">\n                <a:tint val=\"100000\"/>\n                <a:shade val=\"100000\"/>\n                <a:satMod val=\"130000\"/>\n              </a:schemeClr>\n            </a:gs>\n            <a:gs pos=\"100000\">\n              <a:schemeClr val=\"phClr\">\n                <a:tint val=\"50000\"/>\n                <a:shade val=\"100000\"/>\n                <a:satMod val=\"350000\"/>\n              </a:schemeClr>\n            </a:gs>\n          </a:gsLst>\n          <a:lin ang=\"16200000\" scaled=\"0\"/>\n        </a:gradFill>\n      </a:fillStyleLst>\n      <a:lnStyleLst>\n        <a:ln w=\"9525\" cap=\"flat\" cmpd=\"sng\" algn=\"ctr\">\n          <a:solidFill>\n            <a:schemeClr val=\"phClr\">\n              <a:shade val=\"95000\"/>\n              <a:satMod val=\"105000\"/>\n            </a:schemeClr>\n          </a:solidFill>\n          <a:prstDash val=\"solid\"/>\n        </a:ln>\n        <a:ln w=\"25400\" cap=\"flat\" cmpd=\"sng\" algn=\"ctr\">\n          <a:solidFill>\n            <a:schemeClr val=\"phClr\"/>\n          </a:solidFill>\n          <a:prstDash val=\"solid\"/>\n        </a:ln>\n        <a:ln w=\"38100\" cap=\"flat\" cmpd=\"sng\" algn=\"ctr\">\n          <a:solidFill>\n            <a:schemeClr val=\"phClr\"/>\n          </a:solidFill>\n          <a:prstDash val=\"solid\"/>\n        </a:ln>\n      </a:lnStyleLst>\n      <a:effectStyleLst>\n        <a:effectStyle>\n          <a:effectLst>\n            <a:outerShdw blurRad=\"40000\" dist=\"20000\" dir=\"5400000\" rotWithShape=\"0\">\n              <a:srgbClr val=\"000000\">\n                <a:alpha val=\"38000\"/>\n              </a:srgbClr>\n            </a:outerShdw>\n          </a:effectLst>\n        </a:effectStyle>\n        <a:effectStyle>\n          <a:effectLst>\n            <a:outerShdw blurRad=\"40000\" dist=\"23000\" dir=\"5400000\" rotWithShape=\"0\">\n              <a:srgbClr val=\"000000\">\n                <a:alpha val=\"35000\"/>\n              </a:srgbClr>\n            </a:outerShdw>\n          </a:effectLst>\n        </a:effectStyle>\n        <a:effectStyle>\n          <a:effectLst>\n            <a:outerShdw blurRad=\"40000\" dist=\"23000\" dir=\"5400000\" rotWithShape=\"0\">\n              <a:srgbClr val=\"000000\">\n                <a:alpha val=\"35000\"/>\n              </a:srgbClr>\n            </a:outerShdw>\n          </a:effectLst>\n          <a:scene3d>\n            <a:camera prst=\"orthographicFront\">\n              <a:rot lat=\"0\" lon=\"0\" rev=\"0\"/>\n            </a:camera>\n            <a:lightRig rig=\"threePt\" dir=\"t\">\n              <a:rot lat=\"0\" lon=\"0\" rev=\"1200000\"/>\n            </a:lightRig>\n          </a:scene3d>\n          <a:sp3d>\n            <a:bevelT w=\"63500\" h=\"25400\"/>\n          </a:sp3d>\n        </a:effectStyle>\n      </a:effectStyleLst>\n      <a:bgFillStyleLst>\n        <a:solidFill>\n          <a:schemeClr val=\"phClr\"/>\n        </a:solidFill>\n        <a:gradFill rotWithShape=\"1\">\n          <a:gsLst>\n            <a:gs pos=\"0\">\n              <a:schemeClr val=\"phClr\">\n                <a:tint val=\"40000\"/>\n                <a:satMod val=\"350000\"/>\n              </a:schemeClr>\n            </a:gs>\n            <a:gs pos=\"40000\">\n              <a:schemeClr val=\"phClr\">\n                <a:tint val=\"45000\"/>\n                <a:shade val=\"99000\"/>\n                <a:satMod val=\"350000\"/>\n              </a:schemeClr>\n            </a:gs>\n            <a:gs pos=\"100000\">\n              <a:schemeClr val=\"phClr\">\n                <a:shade val=\"20000\"/>\n                <a:satMod val=\"255000\"/>\n              </a:schemeClr>\n            </a:gs>\n          </a:gsLst>\n          <a:path path=\"circle\">\n            <a:fillToRect l=\"50000\" t=\"-80000\" r=\"50000\" b=\"180000\"/>\n          </a:path>\n        </a:gradFill>\n        <a:gradFill rotWithShape=\"1\">\n          <a:gsLst>\n            <a:gs pos=\"0\">\n              <a:schemeClr val=\"phClr\">\n                <a:tint val=\"80000\"/>\n                <a:satMod val=\"300000\"/>\n              </a:schemeClr>\n            </a:gs>\n            <a:gs pos=\"100000\">\n              <a:schemeClr val=\"phClr\">\n                <a:shade val=\"30000\"/>\n                <a:satMod val=\"200000\"/>\n              </a:schemeClr>\n            </a:gs>\n          </a:gsLst>\n          <a:path path=\"circle\">\n            <a:fillToRect l=\"50000\" t=\"50000\" r=\"50000\" b=\"50000\"/>\n          </a:path>\n        </a:gradFill>\n      </a:bgFillStyleLst>\n    </a:fmtScheme>\n  </a:themeElements>\n  <a:objectDefaults>\n    <a:spDef>\n      <a:spPr/>\n      <a:bodyPr/>\n      <a:lstStyle/>\n      <a:style>\n        <a:lnRef idx=\"1\">\n          <a:schemeClr val=\"accent1\"/>\n        </a:lnRef>\n        <a:fillRef idx=\"3\">\n          <a:schemeClr val=\"accent1\"/>\n        </a:fillRef>\n        <a:effectRef idx=\"2\">\n          <a:schemeClr val=\"accent1\"/>\n        </a:effectRef>\n        <a:fontRef idx=\"minor\">\n          <a:schemeClr val=\"lt1\"/>\n        </a:fontRef>\n      </a:style>\n    </a:spDef>\n    <a:lnDef>\n      <a:spPr/>\n      <a:bodyPr/>\n      <a:lstStyle/>\n      <a:style>\n        <a:lnRef idx=\"2\">\n          <a:schemeClr val=\"accent1\"/>\n        </a:lnRef>\n        <a:fillRef idx=\"0\">\n          <a:schemeClr val=\"accent1\"/>\n        </a:fillRef>\n        <a:effectRef idx=\"1\">\n          <a:schemeClr val=\"accent1\"/>\n        </a:effectRef>\n        <a:fontRef idx=\"minor\">\n          <a:schemeClr val=\"tx1\"/>\n        </a:fontRef>\n      </a:style>\n    </a:lnDef>\n  </a:objectDefaults>\n  <a:extraClrSchemeLst/>\n</a:theme>`;\n",
    "static": true,
    "longname": "/Users/helloyou/Documents/js_pro/better-xlsx/src/templates.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 231,
    "kind": "variable",
    "name": "DOT_RELS",
    "memberof": "src/templates.js",
    "static": true,
    "longname": "src/templates.js~DOT_RELS",
    "access": "public",
    "export": true,
    "importPath": "better-xlsx/src/templates.js",
    "importStyle": "{DOT_RELS}",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 232,
    "kind": "variable",
    "name": "DOCPROPS_APP",
    "memberof": "src/templates.js",
    "static": true,
    "longname": "src/templates.js~DOCPROPS_APP",
    "access": "public",
    "export": true,
    "importPath": "better-xlsx/src/templates.js",
    "importStyle": "{DOCPROPS_APP}",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 233,
    "kind": "variable",
    "name": "DOCPROPS_CORE",
    "memberof": "src/templates.js",
    "static": true,
    "longname": "src/templates.js~DOCPROPS_CORE",
    "access": "public",
    "export": true,
    "importPath": "better-xlsx/src/templates.js",
    "importStyle": "{DOCPROPS_CORE}",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 234,
    "kind": "variable",
    "name": "XL_THEME_THEME",
    "memberof": "src/templates.js",
    "static": true,
    "longname": "src/templates.js~XL_THEME_THEME",
    "access": "public",
    "export": true,
    "importPath": "better-xlsx/src/templates.js",
    "importStyle": "{XL_THEME_THEME}",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "kind": "index",
    "content": "better-xlsx\n===========\n\n> A better xlsx lib for read / write / toTable / from Table\n\n[![NPM version](https://img.shields.io/npm/v/better-xlsx.svg)](https://www.npmjs.com/package/better-xlsx)\n[![NPM downloads](https://img.shields.io/npm/dm/better-xlsx.svg)](https://www.npmjs.com/package/better-xlsx)\n[![Build Status](https://travis-ci.org/d-band/better-xlsx.svg?branch=master)](https://travis-ci.org/d-band/better-xlsx)\n[![Coverage Status](https://coveralls.io/repos/github/d-band/better-xlsx/badge.svg?branch=master)](https://coveralls.io/github/d-band/better-xlsx?branch=master)\n[![Dependency Status](https://david-dm.org/d-band/better-xlsx.svg)](https://david-dm.org/d-band/better-xlsx)\n[![Greenkeeper badge](https://badges.greenkeeper.io/d-band/better-xlsx.svg)](https://greenkeeper.io/)\n[![Backers on Open Collective](https://opencollective.com/better-xlsx/backers/badge.svg)](#backers) \n[![Sponsors on Open Collective](https://opencollective.com/better-xlsx/sponsors/badge.svg)](#sponsors) \n\n---\n\n## Install\n\n```bash\n$ npm install better-xlsx\n```\n\n## Usage\n\n- [More Examples](examples)\n\n```javascript\nconst fs = require('fs');\nconst xlsx = require('better-xlsx');\n\nconst file = new xlsx.File();\n\nconst sheet = file.addSheet('Sheet1');\nconst row = sheet.addRow();\nconst cell = row.addCell();\n\ncell.value = 'I am a cell!';\ncell.hMerge = 2;\ncell.vMerge = 1;\n\nconst style = new xlsx.Style();\n\nstyle.fill.patternType = 'solid';\nstyle.fill.fgColor = '00FF0000';\nstyle.fill.bgColor = 'FF000000';\nstyle.align.h = 'center';\nstyle.align.v = 'center';\n\ncell.style = style;\n\nfile\n  .saveAs()\n  .pipe(fs.createWriteStream('test.xlsx'))\n  .on('finish', () => console.log('Done.'));\n```\n\n## Todo\n\n- [ ] xlsx parser\n- [ ] read excel file\n- [x] write excel file\n- [x] transform html table to excel file [html2xlsx](https://github.com/d-band/html2xlsx)\n\n## Report a issue\n\n* [All issues](https://github.com/d-band/better-xlsx/issues)\n* [New issue](https://github.com/d-band/better-xlsx/issues/new)\n\n## Reference\n\n- http://www.ecma-international.org/publications/standards/Ecma-376.htm\n- https://github.com/tealeg/xlsx\n\n## Contributors\n\nThis project exists thanks to all the people who contribute. [[Contribute](CONTRIBUTING.md)].\n<a href=\"graphs/contributors\"><img src=\"https://opencollective.com/better-xlsx/contributors.svg?width=890&button=false\" /></a>\n\n\n## Backers\n\nThank you to all our backers! 🙏 [[Become a backer](https://opencollective.com/better-xlsx#backer)]\n\n<a href=\"https://opencollective.com/better-xlsx#backers\" target=\"_blank\"><img src=\"https://opencollective.com/better-xlsx/backers.svg?width=890\"></a>\n\n\n## Sponsors\n\nSupport this project by becoming a sponsor. Your logo will show up here with a link to your website. [[Become a sponsor](https://opencollective.com/better-xlsx#sponsor)]\n\n<a href=\"https://opencollective.com/better-xlsx/sponsor/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/better-xlsx/sponsor/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/better-xlsx/sponsor/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/better-xlsx/sponsor/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/better-xlsx/sponsor/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/better-xlsx/sponsor/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/better-xlsx/sponsor/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/better-xlsx/sponsor/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/better-xlsx/sponsor/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/better-xlsx/sponsor/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/better-xlsx/sponsor/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/better-xlsx/sponsor/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/better-xlsx/sponsor/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/better-xlsx/sponsor/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/better-xlsx/sponsor/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/better-xlsx/sponsor/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/better-xlsx/sponsor/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/better-xlsx/sponsor/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/better-xlsx/sponsor/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/better-xlsx/sponsor/9/avatar.svg\"></a>\n\n\n\n## License\n\nbetter-xlsx is available under the terms of the MIT License.",
    "longname": "/Users/helloyou/Documents/js_pro/better-xlsx/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"better-xlsx\",\n  \"version\": \"0.7.6\",\n  \"description\": \"A better xlsx lib for read / write / toTable / from Table\",\n  \"main\": \"lib/index.js\",\n  \"scripts\": {\n    \"lint\": \"eslint --ext .js src test\",\n    \"build\": \"npm run build:node && npm run build:dist\",\n    \"build:node\": \"rimraf lib && NODE_ENV=production babel --out-dir=lib src\",\n    \"build:dist\": \"rimraf dist && NODE_ENV=production rollup -c && uglifyjs -m -o dist/xlsx.min.js dist/xlsx.js\",\n    \"prepare\": \"npm run build\",\n    \"test\": \"NODE_ENV=test nyc mocha -t 0\",\n    \"report\": \"nyc report --reporter=html\",\n    \"coveralls\": \"nyc report --reporter=text-lcov | coveralls\",\n    \"doc\": \"rimraf esdoc && esdoc\",\n    \"pages\": \"npm run doc && gh-pages -d esdoc\"\n  },\n  \"nyc\": {\n    \"all\": true,\n    \"include\": [\n      \"src/**/*.js\"\n    ],\n    \"require\": [\n      \"@babel/register\"\n    ],\n    \"sourceMap\": false,\n    \"instrument\": false\n  },\n  \"pre-commit\": [\n    \"lint\"\n  ],\n  \"devDependencies\": {\n    \"@babel/cli\": \"^7.8.4\",\n    \"@babel/core\": \"^7.8.4\",\n    \"@babel/plugin-external-helpers\": \"^7.8.3\",\n    \"@babel/plugin-proposal-class-properties\": \"^7.8.3\",\n    \"@babel/plugin-proposal-decorators\": \"^7.8.3\",\n    \"@babel/plugin-transform-runtime\": \"^7.8.3\",\n    \"@babel/preset-env\": \"^7.8.4\",\n    \"@babel/register\": \"^7.8.3\",\n    \"@rollup/plugin-commonjs\": \"^19.0.2\",\n    \"@rollup/plugin-node-resolve\": \"^13.0.4\",\n    \"babel-eslint\": \"^10.0.3\",\n    \"babel-plugin-add-module-exports\": \"^1.0.2\",\n    \"babel-plugin-class-properties\": \"^1.0.0\",\n    \"babel-plugin-istanbul\": \"^6.0.0\",\n    \"chai\": \"^4.2.0\",\n    \"coveralls\": \"^3.0.9\",\n    \"esdoc\": \"^1.1.0\",\n    \"esdoc-ecmascript-proposal-plugin\": \"^1.0.0\",\n    \"esdoc-inject-style-plugin\": \"^1.0.0\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"eslint\": \"^7.31.0\",\n    \"eslint-config-standard\": \"^16.0.3\",\n    \"eslint-plugin-import\": \"^2.20.1\",\n    \"eslint-plugin-node\": \"^11.0.0\",\n    \"eslint-plugin-promise\": \"^5.1.0\",\n    \"gh-pages\": \"^3.2.3\",\n    \"mocha\": \"^9.0.3\",\n    \"nyc\": \"^15.0.0\",\n    \"pre-commit\": \"^1.1.3\",\n    \"rimraf\": \"^3.0.2\",\n    \"rollup\": \"^2.0.0\",\n    \"rollup-plugin-babel\": \"^4.3.3\",\n    \"stream-equal\": \"^2.0.1\",\n    \"uglify-js\": \"^3.7.7\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/d-band/better-xlsx.git\"\n  },\n  \"engines\": {\n    \"node\": \">= 4\"\n  },\n  \"keywords\": [\n    \"xlsx\",\n    \"excel\",\n    \"html\",\n    \"read\",\n    \"write\"\n  ],\n  \"author\": \"d-band\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/d-band/better-xlsx/issues\"\n  },\n  \"homepage\": \"https://github.com/d-band/better-xlsx#readme\",\n  \"dependencies\": {\n    \"@babel/runtime\": \"^7.8.4\",\n    \"jszip\": \"^3.2.2\",\n    \"kind-of\": \"^6.0.3\"\n  },\n  \"collective\": {\n    \"type\": \"opencollective\",\n    \"url\": \"https://opencollective.com/better-xlsx\"\n  }\n}\n",
    "longname": "/Users/helloyou/Documents/js_pro/better-xlsx/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]